// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  nombre         String
  apellido       String
  calorias       Int      @default(0)
  entrenamientos Int      @default(0)
  tiempo         Int      @default(0)
  email          String   @unique  // Agregamos @unique aquí
  password       String   @default("")
  profilePicture String   @default("https://static.vecteezy.com/system/resources/thumbnails/009/292/244/small/default-avatar-icon-of-social-media-user-vector.jpg") // URL de la imagen predeterminada
  routines       Routine[] @relation("UserRoutines")
  stats          UserStats[]  // Relación con las estadísticas por fecha
}

model UserStats {
  id            Int      @id @default(autoincrement())
  userId        Int
  fecha         DateTime @default(now())  // Fecha en que se registran las estadísticas
  entrenamientos Int     @default(0)
  calorias      Float     @default(0.0)
  tiempo        Int     @default(0)  // Tiempo en segundos
  user          User    @relation(fields: [userId], references: [id])

  @@unique([userId, fecha])  // Asegura que no haya entradas duplicadas por usuario y fecha
}

model Routine {
  id        Int                 @id @default(autoincrement())
  name      String
  image     String?
  exercises RoutineExercise[]
  isCustom  Boolean             @default(false)
  userId    Int?                // Este campo es opcional para rutinas predefinidas
  user      User?               @relation("UserRoutines", fields: [userId], references: [id])
  restTime  Int                 @default(0) // Nuevo campo con valor predeterminado 0
}

model Exercise {
  id         Int     @id @default(autoincrement())
  name       String
  image      String?
  calorias   Float     @default(0.0)  // Asignar valor por defecto
  routines   RoutineExercise[]
}

model RoutineExercise {
  id        Int      @id @default(autoincrement())
  routine   Routine  @relation(fields: [routineId], references: [id])
  routineId Int
  exercise  Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int
  sets      Int      // Personalización: cantidad de sets
  reps      Int      // Personalización: cantidad de repeticiones
}
